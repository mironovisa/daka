type Subcategory @model @auth(rules: [{allow: public}]) {
  id: ID!
  Categories: [Category] @manyToMany(relationName: "SubcategoryCategory")
  name: String
  products: [Product] @manyToMany(relationName: "ProductSubcategory")
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
}

type Product @model @auth(rules: [{allow: public}]) {
  id: ID!
  price: Float!
  isFeatured: Boolean
  name: String!
  description: String!
  category: Category @belongsTo
  city: String
  isPaid: Boolean
  userId: ID
  Subcategories: [Subcategory] @manyToMany(relationName: "ProductSubcategory")
}

type Category @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  src: String!
  products: [Product] @hasMany
  subcategorys: [Subcategory] @manyToMany(relationName: "SubcategoryCategory")
}

type FavoriteProduct @model @auth(rules: [{allow: public}]) {
  id: ID!
  userSub: String!
  productID: ID!
  product: Product @hasOne
}

type Message @model @auth(rules: [{allow: public}]) {
  id: ID!
  image: String!
  productName: String!
  sellerName: String!
  situation: String!
  date: String!
}
 